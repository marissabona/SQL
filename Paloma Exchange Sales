--AN EXAMPLE OF CODE I USE TO ORGANIZE AND ANALYZE MONTHLY SALES DATA FOR MY RESALE STORE IN BUFFALO, NY
--My store produces a lot of data. We buy from the public daily, so we have to understand our inventory
--on a deep analytical level. In order to inform my buyers as to what's selling well and what we should
--continue to purchase from our customers, I use SQL to organize and analyze monthly sales data. I then
--present this data to our team, we formulate additional questions about it, and I continue to analyze
-- the data and repeat this process.

--create vendors table and import csv
CREATE TABLE vendors
(id INTEGER PRIMARY KEY AUTOINCREMENT,
name TEXT,
phone TEXT);

--create stock history table and import csv
CREATE TABLE stock
(date TEXT,
item TEXT,
sku INTEGER,
vendor TEXT,
cost TEXT,
location TEXT,
adjustment TEXT);

--create an inventory table for all inventory in our POS system and import csv
CREATE TABLE inventory
(token STRING PRIMARY KEY,
item TEXT,
variation TEXT,
sku INTEGER,
description TEXT,
category TEXT,
GTIN INTEGER,
visibility TEXT,
price INTEGER);

--create august sales table and import csv
CREATE TABLE aug_sales
(date TEXT,
category TEXT,
item TEXT,
qty TEXT,
sku TEXT,
gross_sale INTEGER,
discount INTEGER,
net_sale INTEGER,
tax INTEGER,
transactioniD TEXT,
device TEXT,
notes TEXT,
location TEXT,
customer_id TEXT,
customer TEXT,
count INTEGER,
itemization TEXT,
employee TEXT);
 
--total number of items purchased from sellers in august
SELECT COUNT(DISTINCT stock.sku)
FROM stock
WHERE sku BETWEEN 80100 and 89999
AND LENGTH(stock.sku) < 6;
 
--total number of items that sold in august
SELECT SUM(qty)
FROM aug_sales
WHERE LENGTH(sku) < 6;
 
--total number of items purchased in august that sold in august
SELECT SUM(qty)
FROM aug_sales
WHERE sku BETWEEN 80100 AND 89999
AND LENGTH(sku) < 6;
 
--total number of items NOT purchased in august that sold in august
SELECT SUM(qty)
FROM aug_sales
WHERE sku NOT BETWEEN 80100 AND 89999
AND LENGTH(sku) < 6;
 
--total number of items purchased in august by category
SELECT i.category, COUNT(DISTINCT s.sku)
FROM stock s
LEFT JOIN inventory i
ON s.sku = i.sku
WHERE s.sku BETWEEN 80100 AND 89999
AND LENGTH(s.sku) < 6
GROUP BY i.category;
 
--total number of items purchased in august that sold in august, by category
SELECT category, SUM(qty)
FROM aug_sales
WHERE sku BETWEEN 80100 AND 89999
AND LENGTH(sku) < 6
GROUP BY category;
 
--total items sold in august by price point
SELECT SUM(qty) AS "Total Sold",
CASE
WHEN a.gross_sale BETWEEN 3 AND 10 THEN "$4-$10"
WHEN a.gross_sale BETWEEN 11 AND 20 THEN "$12-$20"
ELSE "Over $20"
END AS "Price Point"
FROM aug_sales a
WHERE LENGTH(a.sku) < 6
GROUP BY "Price Point";
 
--average price of items purchased in august by category
SELECT category, AVG(price) AS "Average Price"
FROM inventory
WHERE sku BETWEEN 70100 AND 79999
AND LENGTH(sku) < 6
GROUP BY category;
 
--average price of items bought in august that sold in august, by category
SELECT category, AVG(gross_sale) AS "Average Price"
FROM jul_sales
WHERE sku BETWEEN 70100 AND 79999
AND LENGTH(sku) < 6
GROUP BY category;
 
--total online items uploaded in august
SELECT COUNT(DISTINCT sku) AS "Online Items Uploaded"
FROM inventory
WHERE sku BETWEEN 80100 AND 83199
AND LENGTH(sku) < 6;
 
--total online items sold in august
SELECT SUM(qty) AS "Online Items Sold"
FROM aug_sales
WHERE sku BETWEEN 80100 AND 83199
AND LENGTH(sku) < 6;
 
--august online items sold in store vs online
SELECT SUM(qty) AS "Items Sold",
CASE
WHEN device = "" THEN "Online"
ELSE "In Store"
END AS "Where Sold"
FROM aug_sales
WHERE sku BETWEEN 80100 AND 83199
AND LENGTH(sku) < 6
GROUP BY "Where Sold";
 
--total items purchased from various brands by month
SELECT COUNT(sku) as purchased,
CASE
WHEN item LIKE "%zara%" THEN "Zara"
WHEN item LIKE "%forever 21%" THEN "Forever 21"
WHEN item LIKE "%h&m%" THEN "H&M"
WHEN item LIKE "%wild fable%" THEN "Wild Fable"
WHEN item LIKE "%urban%" THEN "Urban Outfitters"
WHEN item LIKE "%bdg%" THEN "BDG"
WHEN item LIKE "%under%" THEN "Out From Under"
WHEN item LIKE "%american eagle%" THEN "American Eagle"
WHEN item LIKE "%shein%" THEN "Shein"
WHEN item LIKE "%asos%" THEN "ASOS"
WHEN item LIKE "%old navy%" THEN "Old Navy"
WHEN item LIKE "%topshop%" THEN "Topshop"
WHEN item LIKE "%brandy%" THEN "Brandy Melville"
WHEN item LIKE "%loft%" THEN "LOFT"
WHEN item LIKE "%express%" THEN "Express"
WHEN item LIKE "%free people%" THEN "Free People"
WHEN item LIKE "%aerie%" THEN "Aerie"
WHEN item LIKE "%uniqlo%" THEN "Uniqlo"
WHEN item LIKE "%abercrombie%" THEN "Abercrombie"
WHEN item LIKE "%adidas%" THEN "Adidas"
WHEN item LIKE "%champion%" THEN "Champion"
WHEN item LIKE "%bauer%" THEN "Eddie Bauer"
WHEN item LIKE "%everlane%" THEN "Everlane"
WHEN item LIKE "%gap%" THEN "Gap"
WHEN item LIKE "%harley%" THEN "Harley Davidson"
WHEN item LIKE "%nike%" THEN "Nike"
WHEN item LIKE "%reformation%" THEN "Reformation"
ELSE "Other"
END AS "brand",
CASE
WHEN sku BETWEEN 40100 AND 49999 THEN "4 April"
WHEN sku BETWEEN 50100 AND 59999 THEN "5 May"
WHEN sku BETWEEN 60100 AND 69999 THEN "6 June"
WHEN sku BETWEEN 70100 AND 79999 THEN "7 July"
WHEN sku BETWEEN 80100 AND 89999 THEN "8 August"
ELSE "Other"
END AS "month"
FROM inventory
WHERE LENGTH(sku) < 6
GROUP BY "brand","month"
ORDER BY "brand" ASC;
 
--total number of items purchased in august that sold in august from various brands
SELECT COUNT(sku) as sold,
CASE
WHEN item LIKE "%zara%" THEN "Zara"
WHEN item LIKE "%forever 21%" THEN "Forever 21"
WHEN item LIKE "%h&m%" THEN "H&M"
WHEN item LIKE "%wild fable%" THEN "Wild Fable"
WHEN item LIKE "%urban%" THEN "Urban Outfitters"
WHEN item LIKE "%bdg%" THEN "BDG"
WHEN item LIKE "%under%" THEN "Out From Under"
WHEN item LIKE "%american eagle%" THEN "American Eagle"
WHEN item LIKE "%shein%" THEN "Shein"
WHEN item LIKE "%asos%" THEN "ASOS"
WHEN item LIKE "%old navy%" THEN "Old Navy"
WHEN item LIKE "%topshop%" THEN "Topshop"
WHEN item LIKE "%brandy%" THEN "Brandy Melville"
WHEN item LIKE "%loft%" THEN "LOFT"
WHEN item LIKE "%express%" THEN "Express"
WHEN item LIKE "%free people%" THEN "Free People"
WHEN item LIKE "%aerie%" THEN "Aerie"
WHEN item LIKE "%uniqlo%" THEN "Uniqlo"
WHEN item LIKE "%abercrombie%" THEN "Abercrombie"
WHEN item LIKE "%adidas%" THEN "Adidas"
WHEN item LIKE "%champion%" THEN "Champion"
WHEN item LIKE "%bauer%" THEN "Eddie Bauer"
WHEN item LIKE "%everlane%" THEN "Everlane"
WHEN item LIKE "%gap%" THEN "Gap"
WHEN item LIKE "%harley%" THEN "Harley Davidson"
WHEN item LIKE "%nike%" THEN "Nike"
WHEN item LIKE "%reformation%" THEN "Reformation"
ELSE "Other"
END AS "brand"
FROM aug_sales
WHERE sku BETWEEN 80100 AND 89999
AND LENGTH(sku) < 6
GROUP BY "brand"
ORDER BY "brand" ASC;
 
--total items purchased year to date by brand
SELECT COUNT(sku) as purchased,
CASE
WHEN item LIKE "%zara%" THEN "Zara"
WHEN item LIKE "%forever 21%" THEN "Forever 21"
WHEN item LIKE "%h&m%" THEN "H&M"
WHEN item LIKE "%wild fable%" THEN "Wild Fable"
WHEN item LIKE "%urban%" THEN "Urban Outfitters"
WHEN item LIKE "%bdg%" THEN "BDG"
WHEN item LIKE "%under%" THEN "Out From Under"
WHEN item LIKE "%american eagle%" THEN "American Eagle"
WHEN item LIKE "%shein%" THEN "Shein"
WHEN item LIKE "%asos%" THEN "ASOS"
WHEN item LIKE "%old navy%" THEN "Old Navy"
WHEN item LIKE "%topshop%" THEN "Topshop"
WHEN item LIKE "%brandy%" THEN "Brandy Melville"
WHEN item LIKE "%loft%" THEN "LOFT"
WHEN item LIKE "%express%" THEN "Express"
WHEN item LIKE "%free people%" THEN "Free People"
WHEN item LIKE "%aerie%" THEN "Aerie"
WHEN item LIKE "%uniqlo%" THEN "Uniqlo"
WHEN item LIKE "%abercrombie%" THEN "Abercrombie"
WHEN item LIKE "%adidas%" THEN "Adidas"
WHEN item LIKE "%champion%" THEN "Champion"
WHEN item LIKE "%bauer%" THEN "Eddie Bauer"
WHEN item LIKE "%everlane%" THEN "Everlane"
WHEN item LIKE "%gap%" THEN "Gap"
WHEN item LIKE "%harley%" THEN "Harley Davidson"
WHEN item LIKE "%nike%" THEN "Nike"
WHEN item LIKE "%reformation%" THEN "Reformation"
ELSE "Other"
END AS "brand"
FROM inventory
WHERE LENGTH(sku) < 6
AND sku BETWEEN 10100 AND 89999
GROUP BY "brand"
ORDER BY "brand" ASC;
 
--total item sales by brand year to date
WITH allsales AS (
SELECT sku,item FROM apr_sales
UNION
SELECT sku,item FROM may_sales
UNION
SELECT sku,item FROM jun_sales
UNION
SELECT sku,item FROM jul_sales
UNION
SELECT sku,item FROM aug_sales
WHERE sku BETWEEN 10100 AND 89999
)
SELECT COUNT(sku) as sold,
CASE
WHEN item LIKE "%zara%" THEN "Zara"
WHEN item LIKE "%forever 21%" THEN "Forever 21"
WHEN item LIKE "%h&m%" THEN "H&M"
WHEN item LIKE "%wild fable%" THEN "Wild Fable"
WHEN item LIKE "%urban%" THEN "Urban Outfitters"
WHEN item LIKE "%bdg%" THEN "BDG"
WHEN item LIKE "%under%" THEN "Out From Under"
WHEN item LIKE "%american eagle%" THEN "American Eagle"
WHEN item LIKE "%shein%" THEN "Shein"
WHEN item LIKE "%asos%" THEN "ASOS"
WHEN item LIKE "%old navy%" THEN "Old Navy"
WHEN item LIKE "%topshop%" THEN "Topshop"
WHEN item LIKE "%brandy%" THEN "Brandy Melville"
WHEN item LIKE "%loft%" THEN "LOFT"
WHEN item LIKE "%express%" THEN "Express"
WHEN item LIKE "%free people%" THEN "Free People"
WHEN item LIKE "%aerie%" THEN "Aerie"
WHEN item LIKE "%uniqlo%" THEN "Uniqlo"
WHEN item LIKE "%abercrombie%" THEN "Abercrombie"
WHEN item LIKE "%adidas%" THEN "Adidas"
WHEN item LIKE "%champion%" THEN "Champion"
WHEN item LIKE "%bauer%" THEN "Eddie Bauer"
WHEN item LIKE "%everlane%" THEN "Everlane"
WHEN item LIKE "%gap%" THEN "Gap"
WHEN item LIKE "%harley%" THEN "Harley Davidson"
WHEN item LIKE "%nike%" THEN "Nike"
WHEN item LIKE "%reformation%" THEN "Reformation"
ELSE "Other"
END AS "brand"
FROM allsales
WHERE LENGTH(sku) < 6
GROUP BY "brand", "month"
ORDER BY "brand" ASC;
 
--total items sold by brand per month, no matter when purchased
SELECT COUNT(sku) as sold,
CASE
WHEN item LIKE "%zara%" THEN "Zara"
WHEN item LIKE "%forever 21%" THEN "Forever 21"
WHEN item LIKE "%h&m%" THEN "H&M"
WHEN item LIKE "%wild fable%" THEN "Wild Fable"
WHEN item LIKE "%urban%" THEN "Urban Outfitters"
WHEN item LIKE "%bdg%" THEN "BDG"
WHEN item LIKE "%under%" THEN "Out From Under"
WHEN item LIKE "%american eagle%" THEN "American Eagle"
WHEN item LIKE "%shein%" THEN "Shein"
WHEN item LIKE "%asos%" THEN "ASOS"
WHEN item LIKE "%old navy%" THEN "Old Navy"
WHEN item LIKE "%topshop%" THEN "Topshop"
WHEN item LIKE "%brandy%" THEN "Brandy Melville"
WHEN item LIKE "%loft%" THEN "LOFT"
WHEN item LIKE "%express%" THEN "Express"
WHEN item LIKE "%free people%" THEN "Free People"
WHEN item LIKE "%aerie%" THEN "Aerie"
WHEN item LIKE "%uniqlo%" THEN "Uniqlo"
WHEN item LIKE "%abercrombie%" THEN "Abercrombie"
WHEN item LIKE "%adidas%" THEN "Adidas"
WHEN item LIKE "%champion%" THEN "Champion"
WHEN item LIKE "%bauer%" THEN "Eddie Bauer"
WHEN item LIKE "%everlane%" THEN "Everlane"
WHEN item LIKE "%gap%" THEN "Gap"
WHEN item LIKE "%harley%" THEN "Harley Davidson"
WHEN item LIKE "%nike%" THEN "Nike"
WHEN item LIKE "%reformation%" THEN "Reformation"
ELSE "Other"
END AS "brand"
FROM aug_sales
WHERE LENGTH(sku) < 6
GROUP BY "brand"
ORDER BY "brand" ASC;
 
--vintage items purchased in august
SELECT COUNT(sku)
FROM stock
WHERE item LIKE "%vintage%"
AND sku BETWEEN 80100 AND 89999
AND LENGTH(sku) < 6;
 
--vintage items sold in august
SELECT COUNT(sku)
FROM aug_sales
WHERE item LIKE "%vintage%"
AND sku BETWEEN 70100 AND 79999
AND LENGTH(sku) < 6;
 
--sellers (vendors) who have sold the most items to us in august
SELECT COUNT(DISTINCT i.sku) AS "Total Sold", SUM(i.unit_cost) AS "Total Paid", v.id, v.name
FROM inventory i
INNER JOIN vendors v
ON i.vendor=v.name
WHERE i.sku BETWEEN 80100 AND 89999
AND LENGTH(i.sku) < 6
GROUP BY v.name
ORDER BY COUNT(i.sku) DESC;
 
--sellers (vendors) who sold the most items to us in quarter 2
SELECT COUNT(DISTINCT i.sku) AS "Total Sold", SUM(i.unit_cost) AS "Total Paid", v.id, v.name
FROM inventory i
INNER JOIN vendors v
ON i.vendor=v.name
WHERE i.sku BETWEEN 40100 AND 69999
AND LENGTH(i.sku) < 6
GROUP BY v.name
ORDER BY COUNT(i.sku) DESC;
 
--sellers (vendors) who have sold the most items to us year to date
SELECT COUNT(DISTINCT i.sku) AS "Total Sold", SUM(i.unit_cost) AS "Total Paid", v.id, v.name
FROM inventory i
INNER JOIN vendors v
ON i.vendor=v.name
WHERE LENGTH(i.sku) < 6
GROUP BY v.name
ORDER BY COUNT(i.sku) DESC;
 
--sellers (vendors) whose items we have sold the most of in august
WITH VendorSales AS (
SELECT i.sku AS sku, i.vendor AS Vendor
FROM inventory i
INNER JOIN vendors v
ON i.vendor=v.name
WHERE i.sku BETWEEN 80100 AND 89999
AND LENGTH(i.sku) < 6
)
SELECT v.Vendor, COUNT(DISTINCT v.sku) AS Purchased, COUNT(DISTINCT a.sku) AS Sold,
COUNT(DISTINCT a.sku)*100/COUNT(DISTINCT v.sku) AS Percent
FROM VendorSales v
LEFT JOIN aug_sales a
ON v.sku=a.sku
GROUP BY v.vendor
ORDER BY Percent DESC, Purchased DESC;
 
--sellers (vendors) whose items we have sold the most of in quarter 2
WITH VendorSales AS (
SELECT i.sku AS sku, i.vendor AS Vendor
FROM inventory i
INNER JOIN vendors v
ON i.vendor=v.name
WHERE i.sku BETWEEN 40100 AND 69999
AND LENGTH(i.sku) < 6
),
TwoSales AS (
SELECT sku,item FROM apr_sales
UNION
SELECT sku,item FROM may_sales
UNION
SELECT sku,item FROM jun_sales
WHERE sku BETWEEN 40100 AND 69999
)
SELECT v.Vendor, COUNT(DISTINCT v.sku) AS Purchased, COUNT(DISTINCT t.sku) AS Sold,
COUNT(DISTINCT t.sku)*100/COUNT(DISTINCT v.sku) AS Percent
FROM VendorSales v
LEFT JOIN TwoSales t
ON v.sku=t.sku
GROUP BY v.vendor
ORDER BY Percent DESC, Purchased DESC;
 
--sellers (vendors) whose items we have sold the most of year to date
WITH VendorSales AS (
SELECT i.sku AS sku, i.vendor AS Vendor
FROM inventory i
INNER JOIN vendors v
ON i.vendor=v.name
WHERE i.sku BETWEEN 40100 AND 89999
AND LENGTH(i.sku) < 6
),
AllSales AS (
SELECT sku,item FROM apr_sales
UNION
SELECT sku,item FROM may_sales
UNION
SELECT sku,item FROM jun_sales
UNION
SELECT sku,item FROM jul_sales
UNION
SELECT sku,item FROM aug_sales
WHERE sku BETWEEN 40100 AND 89999
)
SELECT v.Vendor, COUNT(DISTINCT v.sku) AS Purchased, COUNT(DISTINCT a.sku) AS Sold,
COUNT(DISTINCT a.sku)*100/COUNT(DISTINCT v.sku) AS Percent
FROM VendorSales v
LEFT JOIN AllSales a
ON v.sku=a.sku
GROUP BY v.vendor
ORDER BY Percent DESC, Purchased DESC;
